{"ast":null,"code":"var _jsxFileName = \"/Users/zhanghao/Documents/code/ReactLearning/tic-tac-toe-React/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css'; // 受控组件\n// class Square extends React.Component {\n//     render() {\n//         return (\n//             <button className=\"square\"\n//                     onClick={() =>\n//                         this.props.onClick({value: 'X'})\n//                     }>\n//                 {\n//                     this.props.value\n//                 }\n//             </button>\n//         );\n//     }\n// }\n// 将上面的类替换成函数组件\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n/*\n* 当你遇到需要同时获取多个子组件数据，\n* 或者两个组件之间需要相互通讯的情况时，\n* 需要把子组件的 state 数据提升至其共同的父组件当中保存。\n* 之后父组件可以通过 props 将状态数据传递到子组件当中。\n* 这样应用当中所有组件的状态数据就能够更方便地同步共享了。\n*/\n\n\n_c = Square;\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  renderSquare(i) {\n    // react数据从父组件传到子组件\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this);\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 153,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/zhanghao/Documents/code/ReactLearning/tic-tac-toe-React/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","constructor","state","squares","Array","fill","xIsNext","handleClick","i","slice","calculateWinner","setState","renderSquare","render","winner","status","Game","lines","length","a","b","c","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\n// 受控组件\n// class Square extends React.Component {\n//     render() {\n//         return (\n//             <button className=\"square\"\n//                     onClick={() =>\n//                         this.props.onClick({value: 'X'})\n//                     }>\n//                 {\n//                     this.props.value\n//                 }\n//             </button>\n//         );\n//     }\n// }\n\n// 将上面的类替换成函数组件\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\n/*\n* 当你遇到需要同时获取多个子组件数据，\n* 或者两个组件之间需要相互通讯的情况时，\n* 需要把子组件的 state 数据提升至其共同的父组件当中保存。\n* 之后父组件可以通过 props 将状态数据传递到子组件当中。\n* 这样应用当中所有组件的状态数据就能够更方便地同步共享了。\n*/\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n            xIsNext: true,\n        };\n    }\n\n    handleClick(i) {\n        const squares = this.state.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            squares: squares,\n            xIsNext: !this.state.xIsNext\n        });\n    }\n\n    renderSquare(i) {\n        // react数据从父组件传到子组件\n        return (<Square value={this.state.squares[i]}\n                        onClick={() => this.handleClick(i)}\n        />);\n    }\n\n    render() {\n        const winner = calculateWinner(this.state.squares);\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n        return (\n            <div>\n                <div className=\"status\">{status}</div>\n                <div className=\"board-row\">\n                    {\n                        this.renderSquare(0)\n                    }\n                    {\n                        this.renderSquare(1)\n                    }\n                    {\n                        this.renderSquare(2)\n                    }\n                </div>\n                <div className=\"board-row\">\n                    {\n                        this.renderSquare(3)\n                    }\n                    {\n                        this.renderSquare(4)\n                    }\n                    {\n                        this.renderSquare(5)\n                    }\n                </div>\n                <div className=\"board-row\">\n                    {\n                        this.renderSquare(6)\n                    }\n                    {\n                        this.renderSquare(7)\n                    }\n                    {\n                        this.renderSquare(8)\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board/>\n                </div>\n                <div className=\"game-info\">\n                    <div>{/*status*/}</div>\n                    <div>{/*TODO*/}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n\nReactDOM.render(\n    <Game/>,\n    document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}