{"ast":null,"code":"var _jsxFileName = \"/Users/zhanghao/Documents/code/ReactLearning/tic-tac-toe-React/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    let total = this.props.total;\n    let row = Math.sqrt(total); // 使用两个循环来渲染出棋盘的格子\n\n    let outerDiv = [];\n    let counter = 0;\n\n    for (let i = 0; i < row; i++) {\n      counter++;\n      let squares = [];\n\n      for (let j = 0; j < row; j++) {\n        let square = this.renderSquare(j);\n        squares.push(square);\n        counter++;\n      }\n\n      outerDiv.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: squares\n      }, counter, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: outerDiv\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      total: 9\n    };\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      let className = this.state.stepNumber === move ? 'bold' : '';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: className,\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this);\n    });\n    let status;\n\n    if (winner === 'Draw') {\n      status = 'Draw !';\n    } else if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          total: this.state.total,\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 132,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares.includes(null)) {\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    } else if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    } else {\n      return 'Draw';\n    }\n  }\n\n  return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/zhanghao/Documents/code/ReactLearning/tic-tac-toe-React/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","total","row","Math","sqrt","outerDiv","counter","j","square","push","Game","constructor","state","history","Array","fill","stepNumber","xIsNext","current","winner","calculateWinner","moves","map","step","move","desc","className","jumpTo","status","handleClick","slice","length","setState","concat","document","getElementById","lines","a","b","c","includes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        return (\n            <Square\n                value={this.props.squares[i]}\n                onClick={() => this.props.onClick(i)}\n            />\n        );\n    }\n\n    render() {\n        let total = this.props.total;\n        let row = Math.sqrt(total);\n        // 使用两个循环来渲染出棋盘的格子\n        let outerDiv = [];\n        let counter = 0;\n        for (let i = 0; i < row; i++) {\n            counter++;\n            let squares = [];\n            for (let j = 0; j < row; j++) {\n                let square = this.renderSquare(j);\n                squares.push(square)\n                counter++;\n            }\n            outerDiv.push(\n                <div key={counter} className=\"board-row\">{squares}</div>\n            )\n        }\n        return (\n            <div>\n                {outerDiv}\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            stepNumber: 0,\n            xIsNext: true,\n            total: 9,\n        };\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            const desc = move ?\n                'Go to move #' + move :\n                'Go to game start';\n            let className = this.state.stepNumber === move ? 'bold': '';\n            return (\n                <li key={move}>\n                    <button className={className} onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            )\n        })\n\n        let status;\n        if (winner === 'Draw') {\n            status = 'Draw !'\n        } else if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        total={this.state.total}\n                        squares={current.squares}\n                        onClick={i => this.handleClick(i)}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1 );\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{\n                squares: squares,\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n        });\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game/>,\n    document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares.includes(null)) {\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                return squares[a];\n            }\n        } else if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        } else {\n            return 'Draw'\n        }\n\n    }\n    return null;\n}\n"]},"metadata":{},"sourceType":"module"}