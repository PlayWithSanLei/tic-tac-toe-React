{"ast":null,"code":"var _jsxFileName = \"/Users/zhanghao/Documents/code/ReactLearning/tic-tac-toe-React/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css'; // 受控组件\n// class Square extends React.Component {\n//     render() {\n//         return (\n//             <button className=\"square\"\n//                     onClick={() =>\n//                         this.props.onClick({value: 'X'})\n//                     }>\n//                 {\n//                     this.props.value\n//                 }\n//             </button>\n//         );\n//     }\n// }\n// 将上面的类替换成函数组件\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n/*\n* 当你遇到需要同时获取多个子组件数据，\n* 或者两个组件之间需要相互通讯的情况时，\n* 需要把子组件的 state 数据提升至其共同的父组件当中保存。\n* 之后父组件可以通过 props 将状态数据传递到子组件当中。\n* 这样应用当中所有组件的状态数据就能够更方便地同步共享了。\n*/\n\n\n_c = Square;\n\nclass Board extends React.Component {\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  renderSquare(i) {\n    // react数据从父组件传到子组件\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 184,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/zhanghao/Documents/code/ReactLearning/tic-tac-toe-React/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","handleClick","i","squares","state","slice","calculateWinner","xIsNext","setState","renderSquare","render","Game","constructor","history","Array","fill","current","length","concat","winner","moves","map","step","move","desc","jumpTo","status","lines","a","b","c","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,sBACI;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEA,KAAK,CAACC,OAA1C;AAAA,cACKD,KAAK,CAACE;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;KAdSH,M;;AAgBT,MAAMI,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,CAAD,EAAI;AACX,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAAX,CAAmBE,KAAnB,EAAhB;;AACA,QAAIC,eAAe,CAACH,OAAD,CAAf,IAA4BA,OAAO,CAACD,CAAD,CAAvC,EAA4C;AACxC;AACH;;AACDC,IAAAA,OAAO,CAACD,CAAD,CAAP,GAAa,KAAKE,KAAL,CAAWG,OAAX,GAAqB,GAArB,GAA2B,GAAxC;AACA,SAAKC,QAAL,CAAc;AACVL,MAAAA,OAAO,EAAEA,OADC;AAEVI,MAAAA,OAAO,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAFX,KAAd;AAIH;;AAEDE,EAAAA,YAAY,CAACP,CAAD,EAAI;AACZ;AACA,wBAAQ,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,OAAX,CAAmBD,CAAnB,CAAf;AACQ,MAAA,OAAO,EAAE,MAAM,KAAKN,KAAL,CAAWC,OAAX,CAAmBK,CAAnB;AADvB;AAAA;AAAA;AAAA;AAAA,YAAR;AAGH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBAEQ,KAAKD,YAAL,CAAkB,CAAlB,CAFR,EAKQ,KAAKA,YAAL,CAAkB,CAAlB,CALR,EAQQ,KAAKA,YAAL,CAAkB,CAAlB,CARR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBAEQ,KAAKA,YAAL,CAAkB,CAAlB,CAFR,EAKQ,KAAKA,YAAL,CAAkB,CAAlB,CALR,EAQQ,KAAKA,YAAL,CAAkB,CAAlB,CARR;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAuBI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBAEQ,KAAKA,YAAL,CAAkB,CAAlB,CAFR,EAKQ,KAAKA,YAAL,CAAkB,CAAlB,CALR,EAQQ,KAAKA,YAAL,CAAkB,CAAlB,CARR;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqCH;;AA1D+B;;AA6DpC,MAAME,IAAN,SAAmBlB,KAAK,CAACO,SAAzB,CAAmC;AAC/BY,EAAAA,WAAW,CAAChB,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKQ,KAAL,GAAa;AACTS,MAAAA,OAAO,EAAE,CAAC;AACNV,QAAAA,OAAO,EAAEW,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADH,OAAD,CADA;AAITR,MAAAA,OAAO,EAAE;AAJA,KAAb;AAMH;;AAEDN,EAAAA,WAAW,CAACC,CAAD,EAAI;AACX,UAAMW,OAAO,GAAG,KAAKT,KAAL,CAAWS,OAA3B;AACA,UAAMG,OAAO,GAAGH,OAAO,CAACA,OAAO,CAACI,MAAR,GAAiB,CAAlB,CAAvB;AACA,UAAMd,OAAO,GAAGa,OAAO,CAACb,OAAR,CAAgBE,KAAhB,EAAhB;;AACA,QAAIC,eAAe,CAACH,OAAD,CAAf,IAA4BA,OAAO,CAACD,CAAD,CAAvC,EAA4C;AACxC;AACH;;AACDC,IAAAA,OAAO,CAACD,CAAD,CAAP,GAAa,KAAKE,KAAL,CAAWG,OAAX,GAAqB,GAArB,GAA2B,GAAxC;AACA,SAAKC,QAAL,CAAc;AACVK,MAAAA,OAAO,EAAEA,OAAO,CAACK,MAAR,CAAe,CAAC;AACrBf,QAAAA,OAAO,EAAEA;AADY,OAAD,CAAf,CADC;AAIVI,MAAAA,OAAO,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAJX,KAAd;AAMH;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAMG,OAAO,GAAG,KAAKT,KAAL,CAAWS,OAA3B;AACA,UAAMG,OAAO,GAAGH,OAAO,CAACA,OAAO,CAACI,MAAR,GAAiB,CAAlB,CAAvB;AACA,UAAME,MAAM,GAAGb,eAAe,CAACU,OAAO,CAACb,OAAT,CAA9B;AAEA,UAAMiB,KAAK,GAAGP,OAAO,CAACQ,GAAR,CAAY,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACtC,YAAMC,IAAI,GAAGD,IAAI,GACb,iBAAiBA,IADJ,GAEb,kBAFJ;AAGA,0BACI;AAAA,+BACI;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKE,MAAL,CAAYF,IAAZ,CAAvB;AAAA,oBAA2CC;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KATa,CAAd;AAWA,QAAIE,MAAJ;;AACA,QAAIP,MAAJ,EAAY;AACRO,MAAAA,MAAM,GAAG,aAAaP,MAAtB;AACH,KAFD,MAEO;AACHO,MAAAA,MAAM,GAAG,mBAAmB,KAAKtB,KAAL,CAAWG,OAAX,GAAqB,GAArB,GAA2B,GAA9C,CAAT;AACH;;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA5D8B;;AA+DnC,SAASD,eAAT,CAAyBH,OAAzB,EAAkC;AAC9B,QAAMwB,KAAK,GAAG,CACV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADU,EAEV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFU,EAGV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHU,EAIV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJU,EAKV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALU,EAMV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANU,EAOV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPU,EAQV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARU,CAAd;;AAWA,OAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyB,KAAK,CAACV,MAA1B,EAAkCf,CAAC,EAAnC,EAAuC;AACnC,UAAM,CAAC0B,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYH,KAAK,CAACzB,CAAD,CAAvB;;AACA,QAAIC,OAAO,CAACyB,CAAD,CAAP,IAAczB,OAAO,CAACyB,CAAD,CAAP,KAAezB,OAAO,CAAC0B,CAAD,CAApC,IAA2C1B,OAAO,CAACyB,CAAD,CAAP,KAAezB,OAAO,CAAC2B,CAAD,CAArE,EAA0E;AACtE,aAAO3B,OAAO,CAACyB,CAAD,CAAd;AACH;AACJ;;AACD,SAAO,IAAP;AACH;;AAEDlC,QAAQ,CAACgB,MAAT,eACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QADJ,EAEIqB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\n// 受控组件\n// class Square extends React.Component {\n//     render() {\n//         return (\n//             <button className=\"square\"\n//                     onClick={() =>\n//                         this.props.onClick({value: 'X'})\n//                     }>\n//                 {\n//                     this.props.value\n//                 }\n//             </button>\n//         );\n//     }\n// }\n\n// 将上面的类替换成函数组件\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\n/*\n* 当你遇到需要同时获取多个子组件数据，\n* 或者两个组件之间需要相互通讯的情况时，\n* 需要把子组件的 state 数据提升至其共同的父组件当中保存。\n* 之后父组件可以通过 props 将状态数据传递到子组件当中。\n* 这样应用当中所有组件的状态数据就能够更方便地同步共享了。\n*/\n\nclass Board extends React.Component {\n    handleClick(i) {\n        const squares = this.state.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            squares: squares,\n            xIsNext: !this.state.xIsNext\n        });\n    }\n\n    renderSquare(i) {\n        // react数据从父组件传到子组件\n        return (<Square value={this.props.squares[i]}\n                        onClick={() => this.props.onClick(i)}\n        />);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {\n                        this.renderSquare(0)\n                    }\n                    {\n                        this.renderSquare(1)\n                    }\n                    {\n                        this.renderSquare(2)\n                    }\n                </div>\n                <div className=\"board-row\">\n                    {\n                        this.renderSquare(3)\n                    }\n                    {\n                        this.renderSquare(4)\n                    }\n                    {\n                        this.renderSquare(5)\n                    }\n                </div>\n                <div className=\"board-row\">\n                    {\n                        this.renderSquare(6)\n                    }\n                    {\n                        this.renderSquare(7)\n                    }\n                    {\n                        this.renderSquare(8)\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            xIsNext: true,\n        }\n    }\n\n    handleClick(i) {\n        const history = this.state.history;\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{\n                squares: squares,\n            }]),\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[history.length - 1];\n        const winner = calculateWinner(current.squares)\n\n        const moves = history.map((step, move) => {\n            const desc = move ?\n                'Go to move #' + move :\n                'Go to game start';\n            return (\n                <li>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            );\n        });\n\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board/>\n                </div>\n                <div className=\"game-info\">\n                    <div>{/*status*/}</div>\n                    <div>{/*TODO*/}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n\nReactDOM.render(\n    <Game/>,\n    document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}