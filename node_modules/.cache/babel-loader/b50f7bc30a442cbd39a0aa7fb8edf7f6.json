{"ast":null,"code":"var _jsxFileName = \"/Users/zhanghao/Documents/code/ReactLearning/tic-tac-toe-React/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Square extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: () => this.props.onClick({\n        value: 'X'\n      }),\n      children: this.props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/*\n* 当你遇到需要同时获取多个子组件数据，\n* 或者两个组件之间需要相互通讯的情况时，\n* 需要把子组件的 state 数据提升至其共同的父组件当中保存。\n* 之后父组件可以通过 props 将状态数据传递到子组件当中。\n* 这样应用当中所有组件的状态数据就能够更方便地同步共享了。\n*/\n\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null)\n    };\n  }\n\n  renderSquare(i) {\n    // react数据从父组件传到子组件\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this);\n  }\n\n  render() {\n    const status = 'Next player: X';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 103,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/zhanghao/Documents/code/ReactLearning/tic-tac-toe-React/src/index.js"],"names":["React","ReactDOM","Square","Component","render","props","onClick","value","Board","constructor","state","squares","Array","fill","renderSquare","i","handleClick","status","Game","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACjCC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AACQ,MAAA,OAAO,EAAE,MACL,KAAKC,KAAL,CAAWC,OAAX,CAAmB;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAnB,CAFZ;AAAA,gBAKQ,KAAKF,KAAL,CAAWE;AALnB;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAZgC;AAerC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,KAAN,SAAoBR,KAAK,CAACG,SAA1B,CAAoC;AAChCM,EAAAA,WAAW,CAACJ,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKK,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADA,KAAb;AAGH;;AAEDC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZ;AACA,wBAAQ,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,OAAX,CAAmBI,CAAnB,CAAf;AACA,MAAA,OAAO,EAAE,MAAM,KAAKC,WAAL,CAAiBD,CAAjB;AADf;AAAA;AAAA;AAAA;AAAA,YAAR;AAGH;;AAEDX,EAAAA,MAAM,GAAG;AACL,UAAMa,MAAM,GAAG,gBAAf;AACA,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBAEQ,KAAKH,YAAL,CAAkB,CAAlB,CAFR,EAKQ,KAAKA,YAAL,CAAkB,CAAlB,CALR,EAQQ,KAAKA,YAAL,CAAkB,CAAlB,CARR;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAaI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBAEQ,KAAKA,YAAL,CAAkB,CAAlB,CAFR,EAKQ,KAAKA,YAAL,CAAkB,CAAlB,CALR,EAQQ,KAAKA,YAAL,CAAkB,CAAlB,CARR;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,eAwBI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBAEQ,KAAKA,YAAL,CAAkB,CAAlB,CAFR,EAKQ,KAAKA,YAAL,CAAkB,CAAlB,CALR,EAQQ,KAAKA,YAAL,CAAkB,CAAlB,CARR;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsCH;;AAvD+B;;AA0DpC,MAAMI,IAAN,SAAmBlB,KAAK,CAACG,SAAzB,CAAmC;AAC/BC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAb8B;;AAgBnCH,QAAQ,CAACG,MAAT,eACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QADJ,EAEIe,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nclass Square extends React.Component {\n    render() {\n        return (\n            <button className=\"square\"\n                    onClick={() =>\n                        this.props.onClick({value: 'X'})\n                    }>\n                {\n                    this.props.value\n                }\n            </button>\n        );\n    }\n}\n\n/*\n* 当你遇到需要同时获取多个子组件数据，\n* 或者两个组件之间需要相互通讯的情况时，\n* 需要把子组件的 state 数据提升至其共同的父组件当中保存。\n* 之后父组件可以通过 props 将状态数据传递到子组件当中。\n* 这样应用当中所有组件的状态数据就能够更方便地同步共享了。\n*/\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n        };\n    }\n\n    renderSquare(i) {\n        // react数据从父组件传到子组件\n        return (<Square value={this.state.squares[i]}\n                onClick={() => this.handleClick(i)}\n        />);\n    }\n\n    render() {\n        const status = 'Next player: X';\n        return (\n            <div>\n                <div className=\"status\">{status}</div>\n                <div className=\"board-row\">\n                    {\n                        this.renderSquare(0)\n                    }\n                    {\n                        this.renderSquare(1)\n                    }\n                    {\n                        this.renderSquare(2)\n                    }\n                </div>\n                <div className=\"board-row\">\n                    {\n                        this.renderSquare(3)\n                    }\n                    {\n                        this.renderSquare(4)\n                    }\n                    {\n                        this.renderSquare(5)\n                    }\n                </div>\n                <div className=\"board-row\">\n                    {\n                        this.renderSquare(6)\n                    }\n                    {\n                        this.renderSquare(7)\n                    }\n                    {\n                        this.renderSquare(8)\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board/>\n                </div>\n                <div className=\"game-info\">\n                    <div>{/*status*/}</div>\n                    <div>{/*TODO*/}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <Game/>,\n    document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}